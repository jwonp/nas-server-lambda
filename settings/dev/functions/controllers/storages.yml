metaPOST:
  handler: src/api/storage/meta.handler
  description: add uploaded file`s meta data.
  events:
    - httpApi:
        path: /storage/meta
        method: post
  url:
    cors: ${file(./settings/CorsSettings.yml):corsSettiings}

metaTitlePATCH:
  handler: src/api/storage/meta/title.handler
  description: rename file name on meta data.
  events:
    - httpApi:
        path: /storage/meta/title
        method: patch
  url:
    cors: ${file(./settings/CorsSettings.yml):corsSettiings}

itemGET:
  handler: src/api/storage/item/GET.handler
  description: get user files in user`s storage by directory
  events:
    - httpApi:
        path: /storage/item
        method: get
  url:
    cors: ${file(./settings/CorsSettings.yml):corsSettiings}

itemDELETE:
  handler: src/api/storage/item/DELETE.handler
  description: delete user file in user`s storage by directory
  events:
    - httpApi:
        path: /storage/item
        method: delete
  url:
    cors: ${file(./settings/CorsSettings.yml):corsSettiings}
itemFolderDELETE:
  handler: src/api/storage/item/folder/DELETE.handler
  description: delete user folder
  events:
    - httpApi:
        path: /storage/item/folder
        method: delete
  url:
    cors: ${file(./settings/CorsSettings.yml):corsSettiings}

    
favoritePOST:
  handler: src/api/storage/item/favorite/POST.handler
  description: add user`s favorite folder
  events:
    - httpApi:
        path: /storage/item/favorite
        method: post
  url:
    cors: ${file(./settings/CorsSettings.yml):corsSettiings}

favoriteGET:
  handler: src/api/storage/item/favorite/GET.handler
  description: get user`s fovorite folders
  events:
    - httpApi:
        path: /storage/item/favorite
        method: get
  url:
    cors: ${file(./settings/CorsSettings.yml):corsSettiings}